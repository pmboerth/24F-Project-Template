import logging
logger = logging.getLogger(__name__)
import pandas as pd
import streamlit as st
import requests
from modules.nav import SideBarLinks

# Call the SideBarLinks from the nav module in the modules directory
SideBarLinks()

# set the header of the page
st.header('Research Opportunities')

# provide a drpdown for the user to select a group
selected_option = st.selectbox("Choose an Group:", ["Engineering", "Computer Science", 
                                                    "Science", "Health Science", "Social Science", "Business"])


# button to submit the group selection
if st.button("Submit", type='primary'):
    # make an API request to fetch posts based on selected group
    response = requests.get(f'http://api:4000/o/opportunities/{selected_option}')
    # Get all the research opportunities from the API
    results = requests.get('http://api:4000/o/opportunities').json()

    if results:
        for opportunity in results:
            # Extract details of the opportunity
            opportunity_id = opportunity.get('PositionId', 'No Id')
            applicant_id = st.session_state['student_id']
            position_name = opportunity.get('Name', 'No Title')
            research_area = opportunity.get('ResearchArea', 'No Research Area')
            description = opportunity.get('Description', 'No description available.')
            department_id = opportunity.get('DepartmentId', 'No Department')
            professor_id = opportunity.get('OwnerId', 'No Professor')
            created_at = opportunity.get('CreatedAt', 'No Date Available')

            # Fetch department name based on department ID
            response1 = requests.get(f'http://api:4000/d/departments/d{department_id}').json()
            department_name = response1[0].get('Name', 'No Name')

            # Fetch professor name based on professor ID
            response2 = requests.get(f'http://api:4000/pr/professors/p{professor_id}').json()
            professor_name = response2[0].get('FirstName') + " " + response2[0].get('LastName')
            
            # This html and css was generated by ChatGPT
            # Display opportunity details using Markdown and HTML
            st.markdown(f"""
                <div style="border: 1px solid #3D4A59; padding: 20px; margin-bottom: 20px; border-radius: 8px; box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); background-color: #3D4A59;">
                    <h3 style="margin-bottom: 10px; color: #90AEAD;">{position_name}</h3>
                    <p style="margin-bottom: 8px; color: #D1D7DC;"><strong>Research Area:</strong> {research_area}</p>
                    <p style="margin-bottom: 8px; color: #D1D7DC;"><strong>Department:</strong> {department_name}</p>
                    <p style="margin-bottom: 8px; color: #D1D7DC;"><strong>Professor:</strong> {professor_name}</p>
                    <p style="margin-bottom: 12px; color: #D1D7DC;">{description}</p>
                    <p style="margin-bottom: 6px; color: #D1D7DC;"><strong>Created At:</strong> {created_at}</p>
                </div>
            """, unsafe_allow_html=True)
            
    else:
        st.warning("No research opportunities")


if st.button("Back"):
    st.switch_page('pages/10_Graduate_Home.py')